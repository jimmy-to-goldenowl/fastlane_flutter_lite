
xcodeproj = './Runner.xcodeproj'
workspace = './Runner.xcworkspace'
buildTarget = 'Runner'
keychainName = "keychain_custom"
keychainPassword = "j1mmyto2021"

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: true,
    default_keychain: true, 
    lock_when_sleeps: false,
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end


default_platform(:ios)

platform :ios do
  before_all do
    # set up public env
    ENV['FASTLANE_ITC_TEAM_ID'] = CredentialsManager::AppfileConfig.try_fetch_value(:itc_team_id)
    ENV['FASTLANE_TEAM_ID'] = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
    ENV['MATCH_APP_IDENTIFIER'] = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    ENV['MATCH_GIT_BRANCH'] = 'dev_2'
    ENV["PROVISIONING_PROFILE_SPECIFIER"] = "match AppStore "+ ENV["MATCH_APP_IDENTIFIER"]
  end

  desc 'Increment build number greater than number in store'
  lane :increment_build_number_manually do
    increment_build_number({
      xcodeproj: xcodeproj,
      build_number: latest_testflight_build_number(app_identifier: APP_IDENTIFIER) + 1
    })
  end

  desc 'Fetch certificates and provisioning profiles'
  private_lane :certificates do
    ensure_temp_keychain(keychainName, keychainPassword)

    match(
      app_identifier: ENV["MATCH_APP_IDENTIFIER"],
      type: "appstore",
      readonly: false,
      keychain_name: keychainName,
      keychain_password: keychainPassword,
    )

    update_code_signing_settings(
      bundle_identifier: ENV["MATCH_APP_IDENTIFIER"],
      use_automatic_signing: false,
      path: xcodeproj,
      targets: buildTarget,
      # build_configurations: "Release",
      code_sign_identity: "Apple Distribution",
      profile_name: ENV["PROVISIONING_PROFILE_SPECIFIER"]
    )
  end

  desc "Setup and Build"
  private_lane :build do
    disable_automatic_code_signing(path: xcodeproj)

    certificates
  
    settings_to_override = {
      :BUNDLE_IDENTIFIER => ENV["MATCH_APP_IDENTIFIER"],
      :PROVISIONING_PROFILE_SPECIFIER => ENV["PROVISIONING_PROFILE_SPECIFIER"],
      :DEVELOPMENT_TEAM => ENV['FASTLANE_TEAM_ID']
    }

    unlock_keychain( 
      path: keychainName,
      password: keychainPassword,
    )

    build_app(
      scheme: "Runner",
      workspace: workspace,
      xcargs: settings_to_override,
      export_options: {
        provisioningProfiles: { 
          ENV["MATCH_APP_IDENTIFIER"] => ENV["PROVISIONING_PROFILE_SPECIFIER"],
        }
      }
    )
    enable_automatic_code_signing(path: xcodeproj)

  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    build
    # testflight
  end

  desc "Push a new beta build to Firebase"
  lane :firebase do
    build
    # firebase_app_distribution
    delete_temp_keychain(keychainName)
  end

end
